
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  usuario_id: 'usuario_id',
  nombre: 'nombre',
  email: 'email',
  password: 'password',
  publicado: 'publicado'
};

exports.Prisma.EmpresaScalarFieldEnum = {
  empresa_id: 'empresa_id',
  nombre: 'nombre',
  email: 'email',
  password: 'password',
  descripcion: 'descripcion',
  direccion: 'direccion',
  contacto: 'contacto',
  horario: 'horario',
  publicado: 'publicado',
  accesibilidad: 'accesibilidad',
  imagenes: 'imagenes'
};

exports.Prisma.AccesibilidadScalarFieldEnum = {
  accesibilidad_id: 'accesibilidad_id',
  empresa_id: 'empresa_id',
  pasillos_min_90cm: 'pasillos_min_90cm',
  rampa: 'rampa',
  puerta_80cm: 'puerta_80cm',
  pisos_antideslizantes: 'pisos_antideslizantes',
  bano_accesible: 'bano_accesible',
  mesas_sillas_adaptadas: 'mesas_sillas_adaptadas',
  ascensor: 'ascensor',
  senalizacion_braille: 'senalizacion_braille',
  contraste_colores: 'contraste_colores',
  guias_podotactiles: 'guias_podotactiles',
  alarmas_emergencia: 'alarmas_emergencia',
  sistema_audifonos: 'sistema_audifonos',
  bano_adaptado_cantidad: 'bano_adaptado_cantidad',
  bano_adaptado_detalles: 'bano_adaptado_detalles',
  atencion_prioritaria_tipo: 'atencion_prioritaria_tipo',
  atencion_prioritaria_horario: 'atencion_prioritaria_horario',
  otros_servicios: 'otros_servicios'
};

exports.Prisma.CalificacionScalarFieldEnum = {
  calificacion_id: 'calificacion_id',
  usuario_id: 'usuario_id',
  empresa_id: 'empresa_id',
  puntuacion: 'puntuacion',
  fecha_creacion: 'fecha_creacion'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  email: 'email',
  password: 'password'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.EmpresaOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  email: 'email',
  password: 'password',
  descripcion: 'descripcion',
  direccion: 'direccion',
  contacto: 'contacto',
  horario: 'horario',
  accesibilidad: 'accesibilidad',
  imagenes: 'imagenes'
};

exports.Prisma.AccesibilidadOrderByRelevanceFieldEnum = {
  bano_adaptado_cantidad: 'bano_adaptado_cantidad',
  bano_adaptado_detalles: 'bano_adaptado_detalles',
  atencion_prioritaria_tipo: 'atencion_prioritaria_tipo',
  atencion_prioritaria_horario: 'atencion_prioritaria_horario',
  otros_servicios: 'otros_servicios'
};


exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Empresa: 'Empresa',
  Accesibilidad: 'Accesibilidad',
  Calificacion: 'Calificacion'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
